# Test rubicon-java on all supported operating systems & Python versions.
#
# First test on Python 3.5 on Ubuntu & Mac, then the rest. This is a load management strategy:
# in sprint situations, it's faster to run the tests on one platform and confirm they're likely to pass elsewhere,
# rather than start many parallel builds which will all fail for the same daft reason. Our smoke test runs on
# both Linux and macOS to avoid bookkeeping about macOS and Linux needing to test on different Python versions.
#
# Keep in sync with `build_status.yml`.
name: CI
on:
  pull_request

jobs:
  smoke:
    name: Smoke test
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest]
        python-version: [3.5]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Environment - checkout code
        uses: actions/checkout@master
      - name: Environment - Setup python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Environment - Use Java 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Debug log - Print exported environment variables
        run: export
      - name: Compile
        run: PYTHON_CONFIG="python${{ matrix.python-version }}-config" PYTHON="python${{ matrix.python-version }}" make
        env:
          PKG_CONFIG_PATH: ${{ env.pythonLocation }}/lib/pkgconfig/
      - name: Debugging - Show dynamic linker information for librubicon.so
        run: LD_LIBRARY_PATH="${{ env.pythonLocation }}/lib" ldd dist/librubicon.so || otool -L dist/librubicon.dylib
      - name: Test
        run: RUBICON_LIBRARY="${PWD}/dist/librubicon.${{ runner.os == 'Linux' && 'so' || 'dylib' }}" ${{ runner.os == 'Linux' && 'LD_' || 'DYLD_' }}LIBRARY_PATH="${{env.pythonLocation}}/lib:$(pwd)/dist" java org.beeware.rubicon.test.Test
  # Now test on all recent versions of Python as well.
  python-versions:
    needs: [smoke]
    name: Python compatibility test
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-18.04, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Environment - checkout code
        uses: actions/checkout@master
      - name: Environment - Setup python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Environment - Use Java 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Debug log - Print exported environment variables
        run: export
      - name: Compile
        run: PYTHON_CONFIG="python${{ matrix.python-version }}-config" PYTHON="python${{ matrix.python-version }}" make
        env:
          PKG_CONFIG_PATH: ${{ env.pythonLocation }}/lib/pkgconfig/
      - name: Debugging - Show dynamic linker information for librubicon.so
        run: LD_LIBRARY_PATH="${{ env.pythonLocation }}/lib" ldd dist/librubicon.so || otool -L dist/librubicon.dylib
      - name: Test
        run: RUBICON_LIBRARY="${PWD}/dist/librubicon.${{ runner.os == 'Linux' && 'so' || 'dylib' }}" ${{ runner.os == 'Linux' && 'LD_' || 'DYLD_' }}LIBRARY_PATH="${{env.pythonLocation}}/lib:$(pwd)/dist" java org.beeware.rubicon.test.Test
  # Test on x86 (32-bit) Ubuntu 18.04, focusing on 32-bit/64-bit errors; just one Python version.
  x86:
    needs: [smoke]
    name: x86 32-bit tests
    runs-on: ubuntu-18.04
    container: i386/ubuntu:18.04
    steps:
      - name: Environment - checkout code
        uses: actions/checkout@master
      - name: Install dependencies, compile rubicon-java, and run tests
        # This step does everything because changes within the ubuntu-18.04-x86@0.1
        # container (e.g., apt-get) are discarded between steps.
        with:
          command: apt-get update && apt-get install -y build-essential python3.7-dev openjdk-8-jdk-headless && JAVA_HOME=/usr/lib/jvm/java-8-openjdk-i386/ PYTHON_CONFIG=python3.7-config PYTHON=python3.7 make && JAVA_HOME=/usr/lib/jvm/java-8-openjdk-i386/ RUBICON_LIBRARY=dist/librubicon.so LD_LIBRARY_PATH=./dist java org.beeware.rubicon.test.Test
